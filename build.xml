<project name="standard" default="main" basedir=".">

    <!-- ******************** Adjustable Properties *********************** -->

    <!-- Now bundle with JAXP 1.2 -->
    <property name="isJaxp12" value="true" />

    <property file="../build.properties"/>
    <property file="${user.home}/build.properties"/>
    <property file="../common.properties"/>
    <property name="jaxen-full.jar"   value="lib/jaxen-full.jar"/>
    <property name="saxpath.jar"      value="lib/saxpath.jar"/>
    <property name="classpath" value="${servlet23.jar}"/>
    <property name="taglib.name"    value="standard"/>

    <!-- ****************** Project Standard Properties ******************* -->

    <!-- *********************** Default Properties ********************** -->

    <!-- ********************* Derived Properties ************************* -->

    <!--

        These property values are derived from the previously defined values,
	and should not normally be overridden from the command line.

        build.doc                   Target directory for documentation app
        build.examples		    Target directory for examples app
        build.library               Target directory for tag library
	dist.doc                    Destination WAR for documentation app
	dist.examples		    Destination WAR for examples app
	dist.library                Destination JAR for tag library
	dist.tld                    Destination TLD file for tag library

    -->

    <!--
    <property name="dist-jr.tld"    value="${dist.dir}/${taglib.name}/${taglib.name}-jr.tld"/>
    <property name="dist-jx.tld"    value="${dist.dir}/${taglib.name}/${taglib.name}-jx.tld"/>
    <property name="dist-x.tld"    value="${dist.dir}/${taglib.name}/${taglib.name}-x.tld"/>
    <property name="dist-scriptfree.tld"    value="${dist.dir}/${taglib.name}/${taglib.name}-scriptfree.tld"/>
    -->
    <property name="jxpath.jar"	    value="lib/commons-JXPath-0.1-dev.jar"/>

  <!-- ********************** Destination Preparation ********************* -->

  <target name="prepare">
    <available file="${jaxp-api.jar}" property="isJaxp12" value="true"/>
    <!-- Make sure required dependencies are available -->
    <antcall target="checkRequiredFile">
       <param name="file" value="${servlet23.jar}"/>
       <param name="fail.message" value="A jar file containing the Servlet 2.3 and JSP1.2 classes is required to compile the Standard Taglib.  Please define the property servlet23.jar in your build.properties file and ensure that the file exists."/>
    </antcall>
    <antcall target="checkRequiredFile">
       <param name="file" value="${jdbc2_0-stdext.jar}"/>     
       <param name="fail.message" value="This build process for the Standard Taglib requires the Sun JDBC 2.0 Optional Package (Standard Extensions).  Please define the property jdbc2_0-stdext.jar in your build.properties file and ensure that the file exists."/>
    </antcall>

    <!-- JAXP 1.1 and 1.2 -->
    <antcall target="checkJaxp11"/>
    <antcall target="checkJaxp12"/>
    <antcall target="checkRequiredFile">
       <param name="file" value="${xalan.jar}"/>     
       <param name="fail.message" value="This build process for the Standard Taglib requires xalan.jar.  Please define the property xalan.jar in your build.properties file and ensure that the file exists."/>
    </antcall>

    <!-- Set up build directories -->
    <mkdir dir="${build.dir}"/>
    <mkdir dir="${build.doc}"/>
    <mkdir dir="${build.doc}/WEB-INF"/>
    <mkdir dir="${build.doc}/WEB-INF/classes"/>
    <mkdir dir="${build.doc}/WEB-INF/lib"/>
    <mkdir dir="${build.examples}"/>
    <mkdir dir="${build.examples}/WEB-INF"/>
    <mkdir dir="${build.examples}/WEB-INF/classes"/>
    <mkdir dir="${build.examples}/WEB-INF/lib"/>
    <mkdir dir="${build.library}"/>
    <mkdir dir="${build.library}/META-INF"/>
    <!-- Set up distribution directory -->
    <mkdir dir="${dist.dir}"/>
    <mkdir dir="${dist.dir}/${taglib.name}"/>
  </target>

  <!-- **************** JAXP 1.1, 1.2 checks ******************** -->

  <target name="checkJaxp11" unless="isJaxp12">
    <antcall target="checkRequiredFile">
       <param name="file" value="${crimson.jar}"/>     
       <param name="fail.message" value="This build process for the Standard Taglib requires a JAXP 1.1-compliant XML parser, such as crimson.jar.  Please define the property crimson.jar in your build.properties file and ensure that the file exists."/>
    </antcall>
  </target>

  <target name="checkJaxp12" if="isJaxp12">
    <antcall target="checkRequiredFile">
       <param name="file" value="${jaxp-api.jar}"/>     
       <param name="fail.message" value="This build process for the Standard Taglib requires jaxp-api.jar from JAXP 1.2.  Please define the property jaxp-api.jar in your build.properties file and ensure that the file exists."/>
    </antcall>
    <antcall target="checkRequiredFile">
       <param name="file" value="${dom.jar}"/>     
       <param name="fail.message" value="This build process for the Standard Taglib requires dom.jar from JAXP 1.2.  Please define the property dom.jar in your build.properties file and ensure that the file exists."/>
    </antcall>
    <antcall target="checkRequiredFile">
       <param name="file" value="${sax.jar}"/>     
       <param name="fail.message" value="This build process for the Standard Taglib requires sax.jar from JAXP 1.2.  Please define the property sax.jar in your build.properties file and ensure that the file exists."/>
    </antcall>
    <antcall target="checkRequiredFile">
       <param name="file" value="${xercesImpl.jar}"/>     
       <param name="fail.message" value="This build process for the Standard Taglib requires a xercesImpl.jar from JAXP 1.2.  Please define the property xercesImpl.jar in your build.properties file and ensure that the file exists."/>
    </antcall>
  </target>

  <!-- **************** JAXP 1.1, 1.2 copying ******************** -->

  <target name="copyJaxp11" unless="isJaxp12">
    <copy file="${crimson.jar}" tofile="${build.examples}/WEB-INF/lib/crimson.jar" />
  </target>

  <target name="copyJaxp12" if="isJaxp12">
    <copy file="${jaxp-api.jar}" tofile="${build.examples}/WEB-INF/lib/jaxp-api.jar" />
    <copy file="${dom.jar}" tofile="${build.examples}/WEB-INF/lib/dom.jar" />
    <copy file="${sax.jar}" tofile="${build.examples}/WEB-INF/lib/sax.jar" />
    <copy file="${xercesImpl.jar}" tofile="${build.examples}/WEB-INF/lib/xercesImpl.jar" />
  </target>

  <target name="copyJaxp11Dist" unless="isJaxp12">
    <copy file="${crimson.jar}" todir="${dist.dir}/${taglib.name}/lib"/>
  </target>

  <target name="copyJaxp12Dist" if="isJaxp12">
    <copy file="${dom.jar}" todir="${dist.dir}/${taglib.name}/lib"/>
    <copy file="${sax.jar}" todir="${dist.dir}/${taglib.name}/lib"/>
    <copy file="${xercesImpl.jar}" todir="${dist.dir}/${taglib.name}/lib"/>
    <copy file="${jaxp-api.jar}" todir="${dist.dir}/${taglib.name}/lib"/>
  </target>

  <!-- **************** JAXP 1.1, 1.2 compiling ******************** -->

  <target name="compileJaxp11" unless="isJaxp12">
      <javac srcdir="${library.src}" destdir="${build.library}"
         classpath="${servlet23.jar}:${jdbc2_0-stdext.jar}:${crimson.jar}:${xalan.jar}:${jaxen-full.jar}:${saxpath.jar}"
	 excludes="org/apache/taglibs/standard/lang/jstl/parser/jsp20/*"
         debug="on"/>
  </target>

  <target name="compileJaxp12" if="isJaxp12">
      <javac srcdir="${library.src}" destdir="${build.library}"
         classpath="${servlet23.jar}:${jdbc2_0-stdext.jar}:${jaxp-api.jar}:${dom.jar}:${sax.jar}:${xercesImpl.jar}:${xalan.jar}:${jaxen-full.jar}:${saxpath.jar}"
	 excludes="org/apache/taglibs/standard/lang/jstl/parser/jsp20/*"
         debug="on"/>
  </target>

  <!-- **************** Special JSP 2.0 EL target ******************** -->

  <target name="jsp20el.build">
    <echo message="Building JSP 2.0 expression language."/>
    <property name="jsp20el.build.dir"   value="${build.dir}/${taglib.name}/jsp20el"/>
    <property name="jsp20el.scratch.dir"   value="${build.dir}/${taglib.name}/jsp20el/scratch"/>
    <property name="jsp20el.package.dir"   value="org/apache/jasper/runtime/el"/>

    <mkdir dir="${jsp20el.build.dir}"/>
    <mkdir dir="${jsp20el.scratch.dir}"/>

    <copy todir="${jsp20el.scratch.dir}/${jsp20el.package.dir}">
        <fileset dir="${library.src}/org/apache/taglibs/standard/lang">
            <include name="jstl/*"/>
            <include name="jstl/parser/*"/>
            <include name="jstl/parser/jsp20/*"/>
            <include name="support/*"/>
        </fileset>
    </copy>
    <!-- rename packages and imports for JSP 2.0 -->
    <replace dir="${jsp20el.scratch.dir}/${jsp20el.package.dir}">
        <include name="**/*"/>
        <replacetoken>org.apache.taglibs.standard.lang</replacetoken>
        <replacevalue>org.apache.jasper.runtime.el</replacevalue>
    </replace>

    <javac srcdir="${jsp20el.scratch.dir}"
           destdir="${jsp20el.build.dir}"
	   classpath="${servlet23.jar}:${build.library}"
	   debug="on">
      <include name="${jsp20el.package.dir}/jstl/*"/>
      <include name="${jsp20el.package.dir}/jstl/parser/*"/>
      <exclude name="${jsp20el.package.dir}/jstl/parser/ELParser.java"/>
      <include name="${jsp20el.package.dir}/jstl/parser/jsp20/*"/>
      <include name="${jsp20el.package.dir}/support/**"/>
    </javac>
    <copy todir="${jsp20el.build.dir}/${jsp20el.package.dir}/jstl">
	<fileset dir="${jsp20el.scratch.dir}/${jsp20el.package.dir}/jstl">
	    <include name="**/*.properties"/>
	</fileset>
    </copy>
    <delete dir="${jsp20el.scratch.dir}"/>
  </target>

  <target name="jsp20el.dist" depends="jsp20el.build">
    <mkdir dir="${dist.dir}/jsp20el"/>
    <jar jarfile="${dist.dir}/jsp20el/jsp20el.jar"
         basedir="${build.dir}/${taglib.name}/jsp20el"/>
  </target>

  <target name="jsp20el.clean">
    <delete dir="${build.dir}/${taglib.name}/jsp20el"/>
    <delete dir="${dist.dir}/jsp20el"/>
  </target>

  <!-- **************** Compile Tag Library Components ******************** -->

  <!-- Compile the documentation application -->
  <target name="documentation" depends="prepare">
    <copy todir="${build.doc}/WEB-INF">
      <fileset dir="${doc.src}/conf"/>
    </copy>
    <style in="${xml.src}/intro.xml"
           destdir="${build.doc}"                                          
           out="${build.doc}/intro.html"
           style="${taglibs.xsl}">
      <param name="prefix" expression="../../"/>
    </style>
    <copy todir="${build.doc}">
      <fileset dir="${doc.src}/web">
        <include name="**/*.html"/>
      </fileset>
    </copy>
  </target>

  <!-- Compile the examples application -->
  <target name="examples" depends="library-dist">
    <copy todir="${build.examples}/WEB-INF">
      <fileset dir="${examples.src}/conf"/>
    </copy>
    <copy todir="${build.examples}">
      <fileset dir="${examples.src}/web"/>
    </copy>
    <!-- Copy implementation-detail jar files -->
    <copy todir="${build.examples}/WEB-INF/lib">
      <fileset dir="lib" includes="*.jar"/>
    </copy>
    <copy file="${jdbc2_0-stdext.jar}" tofile="${build.examples}/WEB-INF/lib/jdbc2_0-stdext.jar" />
    <copy file="${xalan.jar}" tofile="${build.examples}/WEB-INF/lib/xalan.jar" />

    <antcall target="copyJaxp11"/>
    <antcall target="copyJaxp12"/>

    <!-- Copy required external API jar files -->
    <!-- Copy the 'standard' TLD files -->
    <copy todir="${build.examples}/WEB-INF">
      <fileset dir="conf" includes="*.tld"/>
    </copy>
    <!-- Copy the 'standard' jar files -->
    <copy file="${dist.library}/lib/standard.jar"
              tofile="${build.examples}/WEB-INF/lib/standard.jar"/>
    <copy file="${dist.library}/lib/jstl.jar"
              tofile="${build.examples}/WEB-INF/lib/jstl.jar"/>
    <javac srcdir="${examples.src}" destdir="${build.examples}/WEB-INF/classes"
        classpath="${servlet23.jar}:${build.library}"/>
  </target>

  <!-- Compile the tag library itself -->
  <target name="library" depends="prepare">
    <copy todir="${build.library}/META-INF">
      <fileset dir="conf" includes="*.tld"/>
    </copy>
    <copy todir="${build.library}">
	<fileset dir="${library.src}">
	    <include name="**/*.properties"/>
	</fileset>
    </copy>

    <antcall target="compileJaxp11"/>
    <antcall target="compileJaxp12"/>
  </target>

  <!-- Compile the library as well as the associated applications -->
  <target name="main" depends="library,documentation,examples"/>


  <!-- ******************* Create Distribution Files ********************** -->

  <!-- Create the documentation application WAR file -->
  <target name="documentation-dist" depends="documentation">
    <jar jarfile="${dist.doc}" basedir="${build.doc}" excludes="intro.html"/>
    <mkdir dir="${taglibs.doc}"/>
    <copy todir="${taglibs.doc}">
      <fileset dir="${build.doc}">
        <exclude name="WEB-INF/**"/>
      </fileset>
    </copy>
  </target>

  <!-- Create the examples application WAR file -->
  <target name="examples-dist" depends="examples">
    <jar jarfile="${dist.examples}" basedir="${build.examples}"/>
  </target>

  <!-- Create the library distribution files -->
  <target name="library-dist" depends="library">
   <mkdir dir="${dist.library}/lib"/>
   <mkdir dir="${dist.library}/tld"/>
   <jar jarfile="${dist.library}/lib/standard.jar"
         basedir="${build.library}"
         excludes="javax/**"/>
    <!-- Create the 'standard' API jar -->
    <jar jarfile="${dist.library}/lib/jstl.jar"
         basedir="${build.library}"
         includes="javax/**"/>
    <copy file="README.dist" tofile="${dist.dir}/${taglib.name}/README"/>
    <copy file="${jaxen-full.jar}" todir="${dist.dir}/${taglib.name}/lib"/>
    <copy file="${saxpath.jar}" todir="${dist.dir}/${taglib.name}/lib"/>
    <copy file="${jdbc2_0-stdext.jar}" todir="${dist.dir}/${taglib.name}/lib"/>
    <copy file="${xalan.jar}" todir="${dist.dir}/${taglib.name}/lib"/>

    <antcall target="copyJaxp11Dist"/>
    <antcall target="copyJaxp12Dist"/>

    <copy file="${conf.src}/c.tld" todir="${dist.dir}/${taglib.name}/tld"/>
    <copy file="${conf.src}/c-rt.tld" todir="${dist.dir}/${taglib.name}/tld"/>
    <copy file="${conf.src}/x.tld" todir="${dist.dir}/${taglib.name}/tld"/>
    <copy file="${conf.src}/x-rt.tld" todir="${dist.dir}/${taglib.name}/tld"/>
    <copy file="${conf.src}/fmt.tld" todir="${dist.dir}/${taglib.name}/tld"/>
    <copy file="${conf.src}/fmt-rt.tld" todir="${dist.dir}/${taglib.name}/tld"/>
    <copy file="${conf.src}/sql.tld" todir="${dist.dir}/${taglib.name}/tld"/>
    <copy file="${conf.src}/sql-rt.tld" todir="${dist.dir}/${taglib.name}/tld"/>
  </target>

  <!-- javadoc -->
  <target name="javadoc-dist">
   <mkdir dir="${dist.library}/javadoc"/>
   <javadoc packagenames="javax.servlet.jsp.jstl.*"
            sourcepath="src"
            classpath="${servlet23.jar}:${jdbc2_0-stdext.jar}:${crimson.jar}:${jaxp-api.jar}:${dom.jar}:${sax.jar}:${xercesImpl.jar}:${xalan.jar}:${jaxen-full.jar}:${saxpath.jar}"
            destdir="${dist.library}/javadoc"/>
  </target>

  <!-- Create the entire set of distribution files -->
  <target name="dist" depends="library-dist,examples-dist,documentation-dist,javadoc-dist,jsp20el.dist"/>



  <!-- ************************ Utility Commands ************************** -->

  <!-- Delete output directories and files so we can build from scratch -->
  <target name="clean">
    <delete dir="${build.dir}/${taglib.name}"/>
    <delete dir="${dist.dir}/${taglib.name}"/>
  </target>

  <!-- =================================================================== -->
  <!-- Scripts used with antcall for checking for required classes or jars -->
  <!-- Must provide "class" or "file" and "fail.message" parameters        -->
  <!-- =================================================================== -->
  <target name="checkRequiredClass">
    <available classname="${class}" property="requirement.satisfied"/>
    <antcall target="checkRequired.fail"/>
  </target>
  <target name="checkRequiredFile">
    <available file="${file}" property="requirement.satisfied"/>
    <antcall target="checkRequired.fail"/>
  </target>
  <target name="checkOptionalFile">
    <available file="${file}" property="requirement.satisfied"/>
    <antcall target="checkRequired.warn"/>
  </target>
  <target name="checkRequired.fail" unless="requirement.satisfied">
    <fail message="${fail.message}"/>
  </target>
  <target name="checkRequired.warn" unless="requirement.satisfied">
    <echo message="WARNING: ${warn.message}"/>
  </target>

</project>
