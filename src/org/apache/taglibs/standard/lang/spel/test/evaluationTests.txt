# The set of evaluator tests

#######################################################
# basic literals
$1
int
$-12
int
$true
boolean
$false
boolean
$null
java.lang.String
$4.2
double
$-21.3
float
$4.
float
$.21
float
$3e-1
double
$.2222222222
double


#######################################################
# basic relationals between literals

$1 < 2
boolean
$1 > 2
boolean
$1 >= 2
boolean
$1 <= 2
boolean
$1 == 2
boolean
$1 != 2
boolean
$3 >= 3
boolean
$3 <= 3
boolean
$3 == 3
boolean
$3 < 3
boolean
$3 > 3
boolean
$3 != 3
boolean


#######################################################
# looking up objects in scopes

# val1a - defined in page scope
$page:val1a
java.lang.String
$request:val1a
java.lang.String
$session:val1a
java.lang.String
$app:val1a
java.lang.String
$val1a
java.lang.String

# val1b - defined in request scope
$page:val1b
java.lang.String
$request:val1b
java.lang.String
$session:val1b
java.lang.String
$app:val1b
java.lang.String
$val1b
java.lang.String

# val1c - defined in session scope
$page:val1c
java.lang.String
$request:val1c
java.lang.String
$session:val1c
java.lang.String
$app:val1c
java.lang.String
$val1c
java.lang.String

# val1d - defined in application scope
$page:val1d
java.lang.String
$request:val1d
java.lang.String
$session:val1d
java.lang.String
$app:val1d
java.lang.String
$val1d
java.lang.String

#######################################################
# accessing properties

$bean1a.int1
int
$bean1a.boolean1
boolean
$bean1a.string1
java.lang.String
$bean1a.bean1.int2
int
$bean1a.bean1.bean2.string2
java.lang.String

#######################################################
# test the entire conversion matrix

$bean1a.byte1
byte
$bean1a.byte1
char
$bean1a.byte1
short
$bean1a.byte1
int
$bean1a.byte1
long
$bean1a.byte1
float
$bean1a.byte1
double

$bean1a.char1
byte
$bean1a.char1
char
$bean1a.char1
short
$bean1a.char1
int
$bean1a.char1
long
$bean1a.char1
float
$bean1a.char1
double

$bean1a.short1
byte
$bean1a.short1
char
$bean1a.short1
short
$bean1a.short1
int
$bean1a.short1
long
$bean1a.short1
float
$bean1a.short1
double

$bean1a.int1
byte
$bean1a.int1
char
$bean1a.int1
short
$bean1a.int1
int
$bean1a.int1
long
$bean1a.int1
float
$bean1a.int1
double

$bean1a.long1
byte
$bean1a.long1
char
$bean1a.long1
short
$bean1a.long1
int
$bean1a.long1
long
$bean1a.long1
float
$bean1a.long1
double

$bean1a.float1
byte
$bean1a.float1
char
$bean1a.float1
short
$bean1a.float1
int
$bean1a.float1
long
$bean1a.float1
float
$bean1a.float1
double

$bean1a.double1
byte
$bean1a.double1
char
$bean1a.double1
short
$bean1a.double1
int
$bean1a.double1
long
$bean1a.double1
float
$bean1a.double1
double

#######################################################
# test the entire relational comparison type promotion matrix

$bean1a.byte1 < bean1a.byte1
boolean
$bean1a.byte1 < bean1a.char1
boolean
$bean1a.byte1 < bean1a.short1
boolean
$bean1a.byte1 < bean1a.int1
boolean
$bean1a.byte1 < bean1a.long1
boolean
$bean1a.byte1 < bean1a.float1
boolean
$bean1a.byte1 < bean1a.double1
boolean

$bean1a.char1 < bean1a.byte1
boolean
$bean1a.char1 < bean1a.char1
boolean
$bean1a.char1 < bean1a.short1
boolean
$bean1a.char1 < bean1a.int1
boolean
$bean1a.char1 < bean1a.long1
boolean
$bean1a.char1 < bean1a.float1
boolean
$bean1a.char1 < bean1a.double1
boolean

$bean1a.short1 < bean1a.byte1
boolean
$bean1a.short1 < bean1a.char1
boolean
$bean1a.short1 < bean1a.short1
boolean
$bean1a.short1 < bean1a.int1
boolean
$bean1a.short1 < bean1a.long1
boolean
$bean1a.short1 < bean1a.float1
boolean
$bean1a.short1 < bean1a.double1
boolean

$bean1a.int1 < bean1a.byte1
boolean
$bean1a.int1 < bean1a.char1
boolean
$bean1a.int1 < bean1a.short1
boolean
$bean1a.int1 < bean1a.int1
boolean
$bean1a.int1 < bean1a.long1
boolean
$bean1a.int1 < bean1a.float1
boolean
$bean1a.int1 < bean1a.double1
boolean

$bean1a.long1 < bean1a.byte1
boolean
$bean1a.long1 < bean1a.char1
boolean
$bean1a.long1 < bean1a.short1
boolean
$bean1a.long1 < bean1a.int1
boolean
$bean1a.long1 < bean1a.long1
boolean
$bean1a.long1 < bean1a.float1
boolean
$bean1a.long1 < bean1a.double1
boolean

$bean1a.float1 < bean1a.byte1
boolean
$bean1a.float1 < bean1a.char1
boolean
$bean1a.float1 < bean1a.short1
boolean
$bean1a.float1 < bean1a.int1
boolean
$bean1a.float1 < bean1a.long1
boolean
$bean1a.float1 < bean1a.float1
boolean
$bean1a.float1 < bean1a.double1
boolean

$bean1a.double1 < bean1a.byte1
boolean
$bean1a.double1 < bean1a.char1
boolean
$bean1a.double1 < bean1a.short1
boolean
$bean1a.double1 < bean1a.int1
boolean
$bean1a.double1 < bean1a.long1
boolean
$bean1a.double1 < bean1a.float1
boolean
$bean1a.double1 < bean1a.double1
boolean

#######################################################
# test other relational comparison rules

$null == null
boolean
$noSuchAttribute == noSuchAttribute
boolean
$noSuchAttribute == null
boolean
$null == noSuchAttribute
boolean
$bean1a == null
boolean
$null == bean1a
boolean
$bean1a == bean1a
boolean
$bean1a > "hello"
boolean
$bean1a.bean1 < 14
boolean
$bean1a.bean1 == "hello"
boolean

#######################################################
# test String comparisons

$bean1a.string1 == "hello"
boolean
$bean1a.string1 != "hello"
boolean
$bean1a.string1 == "goodbye"
boolean
$bean1a.string1 != "goodbye"
boolean
$bean1a.string1 > "goodbye"
boolean
$"hello" == bean1a.string1
boolean
$"goodbye" > bean1a.string1
boolean

#######################################################
# test errors in property traversal

$noSuchAttribute.abc
java.lang.Object
$bean1a.bean2.byte1
java.lang.Object
$bean1a.noProperty
java.lang.Object
$bean1a.noGetter
java.lang.Object
$bean1a.errorInGetter
java.lang.Object
$bean1a.bean2.string2
java.lang.Object

#######################################################
# test accessing public properties from private classes

$pbean1.value
java.lang.Object
$pbean2.value
java.lang.Object
$pbean3.value
java.lang.Object
$pbean4.value
java.lang.Object
$pbean5.value
java.lang.Object
$pbean6.value
java.lang.Object
$pbean7.value
java.lang.Object

#######################################################
# test literal conversions

true
boolean
false
boolean
12
byte
12
char
12
short
12
int
12
long
12
float
12
double

hello
org.apache.taglibs.standard.lang.spel.test.Bean2
badvalue
org.apache.taglibs.standard.lang.spel.test.Bean2
hello
org.apache.taglibs.standard.lang.spel.test.Bean1

#######################################################
# test null values bumped up to constants

$null
boolean
$null
byte
$null
short
$null
char
$null
int
$null
long
$null
float
$null
double
$null
java.lang.Boolean
$null
java.lang.Byte
$null
java.lang.Short
$null
java.lang.Character
$null
java.lang.Integer
$null
java.lang.Long
$null
java.lang.Float
$null
java.lang.Double


#######################################################
# test escaping the initial $

$bean1a.string1
java.lang.String
\$bean1a.string1
java.lang.String


#######################################################
# test reserved words as identifiers

$and
java.lang.Object
$or
java.lang.Object
$not
java.lang.Object
$eq
java.lang.Object
$ne
java.lang.Object
$lt
java.lang.Object
$gt
java.lang.Object
$le
java.lang.Object
$ge
java.lang.Object
$instanceof
java.lang.Object
$page
java.lang.Object
$request
java.lang.Object
$session
java.lang.Object
$app
java.lang.Object
$true
java.lang.Object
$false
java.lang.Object
$null
java.lang.Object


#######################################################
# test reserved words as property names

$bean1a.and
java.lang.Object
$bean1a.or
java.lang.Object
$bean1a.not
java.lang.Object
$bean1a.eq
java.lang.Object
$bean1a.ne
java.lang.Object
$bean1a.lt
java.lang.Object
$bean1a.gt
java.lang.Object
$bean1a.le
java.lang.Object
$bean1a.ge
java.lang.Object
$bean1a.instanceof
java.lang.Object
$bean1a.page
java.lang.Object
$bean1a.request
java.lang.Object
$bean1a.session
java.lang.Object
$bean1a.app
java.lang.Object
$bean1a.true
java.lang.Object
$bean1a.false
java.lang.Object
$bean1a.null
java.lang.Object
